function Board.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push constant 10
pop static 1
push constant 20
pop static 2
push constant 12
pop static 3
push constant 12
pop static 4
push constant 1
pop static 5
push constant 6
neg
pop static 6
push constant 1
pop static 7
push constant 256
pop static 8
push constant 15
pop static 9
call Tetris.getInstance 0
pop this 0
push static 1
push constant 2
add
push static 2
push constant 1
add
call Matrix.new 2
pop this 1
push constant 0
pop this 2
push constant 0
pop this 4
push constant 0
not
pop this 5
push constant 0
pop this 7
push pointer 0
call Board.createWall 1
pop temp 0
push pointer 0
call Board.spawnMino 1
pop temp 0
push pointer 0
return
function Board.newInstance 0
call Board.new 0
pop static 0
push constant 0
return
function Board.getInstance 0
push static 0
return
function Board.posX 0
push argument 0
pop pointer 0
push this 8
return
function Board.posY 0
push argument 0
pop pointer 0
push this 9
return
function Board.setPosX 0
push argument 0
pop pointer 0
push argument 1
pop this 8
push constant 0
return
function Board.setPosY 0
push argument 0
pop pointer 0
push argument 1
pop this 9
push constant 0
return
function Board.addPosX 0
push argument 0
pop pointer 0
push this 8
push argument 1
add
pop this 8
push constant 0
return
function Board.addPosY 0
push argument 0
pop pointer 0
push this 9
push argument 1
add
pop this 9
push constant 0
return
function Board.spawnMino 0
push argument 0
pop pointer 0
call MinoGenerator.getMino 0
pop this 3
push pointer 0
call Board.drawNextMinos 1
pop temp 0
call MinoGenerator.regenerate 0
pop temp 0
push pointer 0
call Board.resetPosition 1
pop temp 0
push pointer 0
call Board.detectCollision 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Tetris.gameOver 1
pop temp 0
label IF_FALSE0
push constant 0
pop this 6
push constant 0
pop this 7
push constant 0
return
function Board.resetPosition 0
push argument 0
pop pointer 0
push this 3
call Mino.type 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
pop this 8
goto IF_END0
label IF_FALSE0
push constant 3
pop this 8
label IF_END0
push constant 0
pop this 9
push constant 0
return
function Board.createWall 2
push argument 0
pop pointer 0
push constant 1
neg
pop local 0
label WHILE_EXP0
push local 0
push static 1
push constant 1
add
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
push static 2
push constant 0
not
call Board.set 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push static 2
push constant 1
add
lt
not
if-goto WHILE_END1
push pointer 0
push constant 1
neg
push local 1
push constant 0
not
call Board.set 4
pop temp 0
push pointer 0
push constant 10
push local 1
push constant 0
not
call Board.set 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Board.at 0
push argument 0
pop pointer 0
push this 1
push argument 1
push constant 1
add
push argument 2
call Matrix.at 3
return
function Board.set 0
push argument 0
pop pointer 0
push this 1
push argument 1
push constant 1
add
push argument 2
push argument 3
call Matrix.set 4
pop temp 0
push constant 0
return
function Board.calcOffsetX 0
push argument 0
pop pointer 0
push argument 1
push constant 7
add
push static 3
call Math.multiply 2
return
function Board.calcOffsetY 0
push argument 0
pop pointer 0
push argument 1
push static 3
call Math.multiply 2
return
function Board.drawPixel 6
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.calcOffsetX 2
pop local 0
push pointer 0
push argument 2
call Board.calcOffsetY 2
pop local 1
push local 0
push constant 1
add
pop local 2
push local 1
push constant 1
add
pop local 3
push local 0
push static 3
add
push constant 1
sub
pop local 4
push local 1
push static 3
add
push constant 1
sub
pop local 5
push argument 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 2
push local 3
push local 4
push local 5
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 2
push local 3
push local 4
push local 3
call Screen.drawLine 4
pop temp 0
push local 2
push local 3
push local 2
push local 5
call Screen.drawLine 4
pop temp 0
push local 2
push local 5
push local 4
push local 5
call Screen.drawLine 4
pop temp 0
push local 4
push local 3
push local 4
push local 5
call Screen.drawLine 4
pop temp 0
push local 2
push local 3
push local 4
push local 5
call Screen.drawLine 4
pop temp 0
push local 4
push local 3
push local 2
push local 5
call Screen.drawLine 4
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 3
call Screen.setColor 1
pop temp 0
push local 2
push local 3
push local 4
push local 5
call Screen.drawRectangle 4
pop temp 0
label IF_END0
push constant 0
return
function Board.drawBoard 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Matrix.dispose 1
pop temp 0
label IF_FALSE0
push this 1
call Matrix.copy 1
pop this 2
push constant 0
return
function Board.drawView 3
push argument 0
pop pointer 0
push constant 1
neg
pop local 0
label WHILE_EXP0
push local 0
push static 1
push constant 1
add
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push static 2
push constant 1
add
lt
not
if-goto WHILE_END1
push this 2
push local 0
push constant 1
add
push local 1
call Matrix.at 3
pop local 2
push local 2
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 1
push local 2
push constant 0
not
call Board.drawPixel 5
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push local 0
push local 1
push local 2
push constant 0
call Board.drawPixel 5
pop temp 0
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.drawMino 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
call Mino.width 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push argument 1
call Mino.height 1
lt
not
if-goto WHILE_END1
push argument 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push local 0
push local 1
call Mino.at 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 6
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 5
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push local 0
push argument 2
add
push constant 1
add
push local 1
push argument 3
add
push constant 2
call Matrix.set 4
pop temp 0
goto IF_END3
label IF_FALSE3
push this 2
push local 0
push argument 2
add
push constant 1
add
push local 1
push argument 3
add
push constant 0
not
call Matrix.set 4
pop temp 0
label IF_END3
goto IF_END2
label IF_FALSE2
push pointer 0
push local 0
push argument 2
add
push local 1
push argument 3
add
push constant 0
not
push argument 5
call Board.drawPixel 5
pop temp 0
label IF_END2
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push argument 6
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 5
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 2
push local 0
push argument 2
add
push constant 1
add
push local 1
push argument 3
add
push constant 2
call Matrix.set 4
pop temp 0
goto IF_END5
label IF_FALSE5
push this 2
push local 0
push argument 2
add
push constant 1
add
push local 1
push argument 3
add
push argument 1
push local 0
push local 1
call Mino.at 3
call Matrix.set 4
pop temp 0
label IF_END5
goto IF_END4
label IF_FALSE4
push pointer 0
push local 0
push argument 2
add
push local 1
push argument 3
add
push argument 1
push local 0
push local 1
call Mino.at 3
push argument 5
call Board.drawPixel 5
pop temp 0
label IF_END4
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.drawCurrentMino 0
push argument 0
pop pointer 0
push pointer 0
push this 3
push this 8
push this 9
push constant 0
not
push constant 0
push constant 0
not
call Board.drawMino 7
pop temp 0
push constant 0
return
function Board.eraseNextMinosArea 2
push argument 0
pop pointer 0
push pointer 0
push static 4
call Board.calcOffsetX 2
pop local 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 0
push local 0
push static 3
call Mino.maxSize 0
call Math.multiply 2
add
push static 8
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Board.drawNextMinos 3
push argument 0
pop pointer 0
push pointer 0
call Board.eraseNextMinosArea 1
pop temp 0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push constant 4
lt
not
if-goto WHILE_END0
push static 4
pop local 0
push static 5
push local 2
call Mino.maxSize 0
call Math.multiply 2
add
pop local 1
push pointer 0
push local 2
call MinoGenerator.getNextMino 1
push local 0
push local 1
push constant 0
not
push constant 0
push constant 0
call Board.drawMino 7
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.eraseHoldMinosArea 2
push argument 0
pop pointer 0
push pointer 0
push static 6
call Board.calcOffsetX 2
pop local 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 0
push local 0
push static 3
call Mino.maxSize 0
call Math.multiply 2
add
push static 8
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Board.drawHoldMino 0
push argument 0
pop pointer 0
push pointer 0
call Board.eraseHoldMinosArea 1
pop temp 0
push pointer 0
push this 4
push static 6
push static 7
push constant 0
not
push constant 0
push constant 0
call Board.drawMino 7
pop temp 0
push constant 0
return
function Board.drawGhost 2
push argument 0
pop pointer 0
push this 9
pop local 0
push pointer 0
call Board.dropToBottom 1
pop temp 0
push this 9
pop local 1
push local 0
pop this 9
push pointer 0
push this 3
push this 8
push local 1
push constant 0
not
push constant 0
not
push constant 0
not
call Board.drawMino 7
pop temp 0
push constant 0
return
function Board.draw 0
push argument 0
pop pointer 0
push pointer 0
call Board.drawBoard 1
pop temp 0
push pointer 0
call Board.drawGhost 1
pop temp 0
push pointer 0
call Board.drawCurrentMino 1
pop temp 0
push pointer 0
call Board.drawView 1
pop temp 0
push constant 0
return
function Board.setMovement 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.setMovement_ 2
push this 6
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
push static 9
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Tetris.getInstance 0
pop this 0
push this 0
call Tetris.resetDropCount 1
pop temp 0
push this 7
push constant 1
add
pop this 7
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function Board.setMovement_ 0
push argument 0
pop pointer 0
push argument 1
push constant 65
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 0
call Mino.rotate 2
return
label IF_FALSE0
push argument 1
push constant 68
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push constant 0
not
call Mino.rotate 2
return
label IF_FALSE1
push argument 1
push constant 83
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Board.hold 1
return
label IF_FALSE2
push argument 1
push constant 130
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 8
push constant 1
sub
pop this 8
push pointer 0
call Board.detectCollision 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 8
push constant 1
add
pop this 8
push constant 0
return
goto IF_END4
label IF_FALSE4
push constant 0
not
return
label IF_END4
label IF_FALSE3
push argument 1
push constant 132
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 8
push constant 1
add
pop this 8
push pointer 0
call Board.detectCollision 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 8
push constant 1
sub
pop this 8
push constant 0
return
goto IF_END6
label IF_FALSE6
push constant 0
not
return
label IF_END6
label IF_FALSE5
push argument 1
push constant 131
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
call Board.hardDrop 1
pop temp 0
push constant 0
not
return
label IF_FALSE7
push argument 1
push constant 133
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 9
push constant 1
add
pop this 9
push pointer 0
call Board.detectCollision 1
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 9
push constant 1
sub
pop this 9
push constant 0
return
goto IF_END9
label IF_FALSE9
push constant 0
not
return
label IF_END9
label IF_FALSE8
push constant 0
return
function Board.drop 0
push argument 0
pop pointer 0
push this 9
push constant 1
add
pop this 9
push pointer 0
call Board.detectCollision 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 9
push constant 1
sub
pop this 9
push pointer 0
call Board.place 1
pop temp 0
push pointer 0
call Board.eraseLines 1
pop temp 0
push pointer 0
call Board.spawnMino 1
pop temp 0
goto IF_END0
label IF_FALSE0
push this 9
push constant 1
add
pop this 9
push pointer 0
call Board.detectCollision 1
pop this 6
push constant 0
pop this 7
push this 9
push constant 1
sub
pop this 9
label IF_END0
push constant 0
return
function Board.hold 1
push argument 0
pop pointer 0
push this 5
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop this 6
push constant 0
pop this 7
push constant 0
pop this 5
push this 4
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
pop this 4
push pointer 0
call Board.spawnMino 1
pop temp 0
goto IF_END1
label IF_FALSE1
push this 3
pop local 0
push this 4
pop this 3
push local 0
pop this 4
push pointer 0
call Board.resetPosition 1
pop temp 0
label IF_END1
push pointer 0
call Board.drawHoldMino 1
pop temp 0
push constant 0
not
return
function Board.place 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
call Mino.width 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 3
call Mino.height 1
lt
not
if-goto WHILE_END1
push this 3
push local 0
push local 1
call Mino.at 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push this 8
add
push local 1
push this 9
add
push constant 0
not
call Board.set 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
pop this 5
push constant 0
return
function Board.eraseLines 4
push argument 0
pop pointer 0
push static 2
push constant 1
sub
pop local 1
label WHILE_EXP0
push local 1
push constant 0
lt
not
not
if-goto WHILE_END0
push constant 0
not
pop local 2
push constant 0
not
pop local 3
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push static 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
call Board.at 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 3
goto IF_END0
label IF_FALSE0
push constant 0
pop local 2
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 1
call Board.eraseLine 2
pop temp 0
goto IF_END1
label IF_FALSE1
push local 1
push constant 1
sub
pop local 1
label IF_END1
push local 3
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.eraseLine 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push static 1
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
push argument 1
push constant 0
call Board.set 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 1
push constant 1
sub
pop local 1
label WHILE_EXP1
push local 1
push constant 0
lt
not
not
if-goto WHILE_END1
push constant 0
not
pop local 2
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push static 1
lt
not
if-goto WHILE_END2
push pointer 0
push local 0
push local 1
call Board.at 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
label IF_FALSE0
push pointer 0
push local 0
push local 1
push constant 1
add
push pointer 0
push local 0
push local 1
call Board.at 3
call Board.set 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Board.dropToBottom 0
push argument 0
pop pointer 0
label WHILE_EXP0
push pointer 0
call Board.detectCollision 1
not
not
if-goto WHILE_END0
push this 9
push constant 1
add
pop this 9
goto WHILE_EXP0
label WHILE_END0
push this 9
push constant 1
sub
pop this 9
push constant 0
return
function Board.hardDrop 0
push argument 0
pop pointer 0
push pointer 0
call Board.dropToBottom 1
pop temp 0
push pointer 0
call Board.place 1
pop temp 0
push pointer 0
call Board.eraseLines 1
pop temp 0
push pointer 0
call Board.spawnMino 1
pop temp 0
push constant 0
return
function Board.detectCollision 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
call Mino.width 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 3
call Mino.height 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push this 8
add
push local 1
push this 9
add
call Board.at 3
push this 3
push local 0
push local 1
call Mino.at 3
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push this 1
call Matrix.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
