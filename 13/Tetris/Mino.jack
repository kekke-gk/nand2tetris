class Mino {
    field int type;
    field Matrix matrix;

    constructor Mino new(int type_) {
        let type = type_;

        if (type = 0) {
            // ■■
            // ■■
            let matrix = Matrix.new(2, 2);
            do matrix.set(0, 0, 1);
            do matrix.set(0, 1, 1);
            do matrix.set(1, 0, 1);
            do matrix.set(1, 1, 1);
            return this;
        }
        if (type = 1) {
            // □□□□
            // ■■■■
            // □□□□
            // □□□□
            let matrix = Matrix.new(4, 4);
            do matrix.set(0, 1, 1);
            do matrix.set(1, 1, 1);
            do matrix.set(2, 1, 1);
            do matrix.set(3, 1, 1);
            return this;
        }
        let matrix = Matrix.new(3, 3);
        if (type = 2) {
            // □■■
            // ■■□
            // □□□
            do matrix.set(1, 0, 1);
            do matrix.set(2, 0, 1);
            do matrix.set(0, 1, 1);
            do matrix.set(1, 1, 1);
            return this;
        }
        if (type = 3) {
            // ■■□
            // □■■
            // □□□
            do matrix.set(0, 0, 1);
            do matrix.set(1, 0, 1);
            do matrix.set(1, 1, 1);
            do matrix.set(2, 1, 1);
            return this;
        }
        if (type = 4) {
            // ■□□
            // ■■■
            // □□□
            do matrix.set(0, 0, 1);
            do matrix.set(0, 1, 1);
            do matrix.set(1, 1, 1);
            do matrix.set(2, 1, 1);
            return this;
        }
        if (type = 5) {
            // □□■
            // ■■■
            // □□□
            do matrix.set(2, 0, 1);
            do matrix.set(0, 1, 1);
            do matrix.set(1, 1, 1);
            do matrix.set(2, 1, 1);
            return this;
        }
        if (type = 6) {
            // □■□
            // ■■■
            // □□□
            do matrix.set(1, 0, 1);
            do matrix.set(0, 1, 1);
            do matrix.set(1, 1, 1);
            do matrix.set(2, 1, 1);
            return this;
        }

        do Sys.halt();

        // unreachable code
        return this;
    }

    method int type() {
        return type;
    }

    method int width() {
        return matrix.width();
    }
    
    method int height() {
        return matrix.height();
    }

    method boolean at(int x, int y) {
        return matrix.at(x, y);
    }

    method void rotateR() {
        do matrix.rotateR();
        return;
    }

    method void rotateL() {
        do matrix.rotateL();
        return;
    }

    function int maxSize() {
        return 4;
    }
}
